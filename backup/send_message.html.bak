{% extends 'base.html' %}

{% block title %}Send Message{% endblock %}

{% block content %}
<div class="container mt-4 mb-5">
    {% include 'includes/flash_messages.html' %}
    
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card shadow-sm chat-card">
                <div class="card-header bg-teal text-white d-flex justify-content-between align-items-center py-3">
                    <div class="d-flex align-items-center">
                        <a href="{{ url_for('messages') }}" class="text-white me-3">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-left"><polyline points="15 18 9 12 15 6"></polyline></svg>
                        </a>
                        
                        <div class="chat-avatar me-2">
                            {% if recipient.profile_image %}
                                <img src="{{ recipient.profile_image }}" class="rounded-circle" width="40" height="40" alt="{{ recipient.get_display_name() }}">
                            {% else %}
                                <div class="avatar-placeholder rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px; background-color: #e6fcf5;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#173430" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                                </div>
                            {% endif %}
                        </div>
                        
                        <div>
                            <h2 class="h5 mb-0">
                                {% if is_doctor %}Dr. {% endif %}{{ recipient.get_display_name() }}
                            </h2>
                            {% if is_doctor %}
                                <span class="badge bg-white text-teal">Doctor</span>
                            {% endif %}
                        </div>
                    </div>
                    
                    <div class="chat-actions">
                        <button type="button" class="btn btn-sm btn-light" data-bs-toggle="tooltip" title="Call">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>
                        </button>
                        <button type="button" class="btn btn-sm btn-light ms-1" data-bs-toggle="tooltip" title="Video call">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video"><polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect></svg>
                        </button>
                    </div>
                </div>
                
                <div class="card-body p-0">
                    <!-- Message History -->
                    <div class="message-history p-3" id="messageHistory">
                        {% if conversation %}
                            {% for message in conversation %}
                                <div class="message-bubble mb-3 {% if message.sender_id == current_user.id %}from-me{% else %}to-me{% endif %}">
                                    {% if message.sender_id != current_user.id %}
                                        <div class="chat-avatar me-2">
                                            {% if recipient.profile_image %}
                                                <img src="{{ recipient.profile_image }}" class="rounded-circle" width="32" height="32" alt="{{ recipient.get_display_name() }}">
                                            {% else %}
                                                <div class="avatar-placeholder rounded-circle d-flex align-items-center justify-content-center" style="width: 32px; height: 32px; background-color: #e6fcf5;">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="#173430" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                                                </div>
                                            {% endif %}
                                        </div>
                                    {% endif %}
                                    
                                    <div class="message-content-wrapper {% if message.sender_id == current_user.id %}ms-auto{% endif %}">
                                        <div class="message-content {% if message.sender_id == current_user.id %}sent-message{% else %}received-message{% endif %} p-3 rounded">
                                            {{ message.message|safe }}
                                        </div>
                                        <div class="message-time small text-muted {% if message.sender_id == current_user.id %}text-end{% endif %} mt-1">
                                            {{ message.created_at.strftime('%H:%M') }}
                                            {% if message.sender_id == current_user.id %}
                                                {% if message.is_read %}
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="#20c997" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle ms-1"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>
                                                {% else %}
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="#adb5bd" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check ms-1"><polyline points="20 6 9 17 4 12"></polyline></svg>
                                                {% endif %}
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        {% else %}
                            <div class="text-center py-5">
                                <div class="mb-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#adb5bd" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="feather feather-message-circle"><path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path></svg>
                                </div>
                                <h5 class="text-muted">Start a conversation</h5>
                                <p class="text-muted">No previous messages with this person.</p>
                            </div>
                        {% endif %}
                    </div>
                    
                    <!-- Message Form -->
                    <div class="message-form p-3 border-top">
                        <form action="{{ url_for('send_message', recipient_id=recipient.id) }}" method="post" enctype="multipart/form-data" id="messageForm">
                            <div class="input-group">
                                <button type="button" class="btn btn-light" id="attachmentBtn">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-paperclip"><path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path></svg>
                                </button>
                                <input type="file" id="attachment" name="attachment" class="d-none">
                                <input type="text" class="form-control message-input" id="message" name="message" placeholder="Type a message..." required>
                                <button type="submit" class="btn btn-teal">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-send"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg>
                                </button>
                            </div>
                            <div id="attachmentPreview" class="mt-2 d-none">
                                <div class="card bg-light">
                                    <div class="card-body p-2 d-flex align-items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file me-2"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                                        <span id="attachmentName" class="small"></span>
                                        <button type="button" class="btn btn-sm p-0 ms-auto" id="removeAttachment">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block styles %}
<style>
.chat-card {
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.message-history {
    height: 450px;
    overflow-y: auto;
    background-color: #f8f9fa;
}

.message-bubble {
    display: flex;
    margin-bottom: 15px;
    position: relative;
}

.message-bubble.from-me {
    flex-direction: row-reverse;
    text-align: right;
}

.message-content-wrapper {
    max-width: 75%;
}

.message-content {
    display: inline-block;
    border-radius: 12px;
    padding: 10px 16px;
    max-width: 100%;
    word-wrap: break-word;
}

.sent-message {
    background-color: var(--primary-color);
    color: white;
    border-top-right-radius: 4px;
}

.received-message {
    background-color: white;
    border-top-left-radius: 4px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.message-input {
    border-radius: 20px;
    padding-left: 16px;
    height: 44px;
}

.message-form .btn {
    border-radius: 20px;
    height: 44px;
    width: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.chat-avatar {
    align-self: flex-end;
}
</style>
{% endblock %}

{% block scripts %}
<script>
    // Scroll to bottom of conversation on page load
    document.addEventListener('DOMContentLoaded', function() {
        const messageHistory = document.getElementById('messageHistory');
        messageHistory.scrollTop = messageHistory.scrollHeight;
        
        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
        
        // File attachment handling
        const attachmentBtn = document.getElementById('attachmentBtn');
        const attachment = document.getElementById('attachment');
        const attachmentPreview = document.getElementById('attachmentPreview');
        const attachmentName = document.getElementById('attachmentName');
        const removeAttachment = document.getElementById('removeAttachment');
        
        if (attachmentBtn && attachment) {
            attachmentBtn.addEventListener('click', function() {
                attachment.click();
            });
            
            attachment.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const file = this.files[0];
                    attachmentName.textContent = file.name + ' (' + formatFileSize(file.size) + ')';
                    attachmentPreview.classList.remove('d-none');
                }
            });
            
            if (removeAttachment) {
                removeAttachment.addEventListener('click', function() {
                    attachment.value = '';
                    attachmentPreview.classList.add('d-none');
                });
            }
        }
        
        // Function to format file size
        function formatFileSize(bytes) {
            if (bytes < 1024) return bytes + ' B';
            else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';
            else return (bytes / 1048576).toFixed(1) + ' MB';
        }
    });
</script>
{% endblock %}
